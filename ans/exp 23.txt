//exp 23

Table Creation
sql
Copy code
-- Create Customer Table
CREATE TABLE Customer (
    custid INT PRIMARY KEY,
    custname VARCHAR(100),
    address VARCHAR(255),
    city VARCHAR(100),
    phoneno VARCHAR(15)
);

-- Create Order Table
CREATE TABLE Order (
    orderno INT PRIMARY KEY,
    qty INT
);

-- Create Cust_places_order Table
CREATE TABLE Cust_places_order (
    custid INT,
    orderno INT,
    orderdate DATE,
    PRIMARY KEY (custid, orderno),
    FOREIGN KEY (custid) REFERENCES Customer(custid),
    FOREIGN KEY (orderno) REFERENCES Order(orderno)
);

-- Create Item Table
CREATE TABLE Item (
    icode INT PRIMARY KEY,
    iname VARCHAR(100),
    rate DECIMAL(10, 2) CHECK (rate > 500) -- Add constraint for rate
);

-- Create Order_item Table
CREATE TABLE Order_item (
    orderno INT,
    icode INT,
    PRIMARY KEY (orderno, icode),
    FOREIGN KEY (orderno) REFERENCES Order(orderno),
    FOREIGN KEY (icode) REFERENCES Item(icode)
);
Sample Data Insertion
sql
Copy code
-- Insert data into Customer table
INSERT INTO Customer (custid, custname, address, city, phoneno)
VALUES (1, 'Alice', '123 Maple St', 'Boston', '1234567890'),
       (2, 'Bob', '456 Oak St', 'Benton', '2345678901'),
       (3, 'Charlie', '789 Pine St', 'Chicago', '3456789012'),
       (4, 'David', '321 Elm St', 'Dallas', '4567890123');

-- Insert data into Order table
INSERT INTO Order (orderno, qty)
VALUES (101, 10),
       (201, 15),
       (301, 5);

-- Insert data into Cust_places_order table
INSERT INTO Cust_places_order (custid, orderno, orderdate)
VALUES (1, 101, '2011-03-23'),
       (2, 201, '2011-03-23'),
       (3, 301, '2011-03-24'),
       (1, 201, '2011-03-25');

-- Insert data into Item table
INSERT INTO Item (icode, iname, rate)
VALUES (1, 'Widget', 600.00),
       (2, 'Gadget', 700.00),
       (3, 'Thingamajig', 800.00),
       (4, 'Doodad', 400.00), -- This will violate the constraint
       (5, 'Contraption', 900.00);

-- Insert data into Order_item table
INSERT INTO Order_item (orderno, icode)
VALUES (101, 1),
       (201, 2),
       (301, 3);
Queries
Set the quantity to 20 having order number 101.

sql
Copy code
UPDATE Order
SET qty = 20
WHERE orderno = 101;
Display item details by ascending order of item name.

sql
Copy code
SELECT *
FROM Item
ORDER BY iname ASC;
Display item number and rate of item having order number 201.

sql
Copy code
SELECT i.icode, i.rate
FROM Item i
JOIN Order_item oi ON i.icode = oi.icode
WHERE oi.orderno = 201;
Display customer names that have placed orders on date 23 March 2011.

sql
Copy code
SELECT c.custname
FROM Customer c
JOIN Cust_places_order co ON c.custid = co.custid
WHERE co.orderdate = '2011-03-23';
Display customer names whose city name starts with 'b' and ends with 'n' and has at least 4 characters.

sql
Copy code
SELECT custname
FROM Customer
WHERE city LIKE 'b%n' AND LENGTH(city) >= 4;
Display average rate for each item.

sql
Copy code
SELECT AVG(rate) AS average_rate
FROM Item
GROUP BY iname;
Display customers that have orders having minimum quantity.

sql
Copy code
SELECT c.custname
FROM Customer c
JOIN Cust_places_order co ON c.custid = co.custid
WHERE co.orderno IN (SELECT orderno FROM Order ORDER BY qty LIMIT 1);
Find the average rate of each item in that find those items having average rate more than 200.

sql
Copy code
SELECT iname
FROM Item
GROUP BY iname
HAVING AVG(rate) > 200;
Create a view of customers along with order details.

sql
Copy code
CREATE VIEW CustomerOrderDetails AS
SELECT c.custname, co.orderno, co.orderdate, o.qty
FROM Customer c
JOIN Cust_places_order co ON c.custid = co.custid
JOIN Order o ON co.orderno = o.orderno;
Create stored procedure to reduce the rate of an item (user-specified) for a specific item (user-specified).

sql
Copy code
CREATE PROCEDURE ReduceItemRate(IN item_id INT, IN reduction_amount DECIMAL(10, 2))
BEGIN
    UPDATE Item
    SET rate = rate - reduction_amount
    WHERE icode = item_id;
END;