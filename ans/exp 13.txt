//exp 13

Table Creation
sql
Copy code
-- Create Hotel Table
CREATE TABLE Hotel (
    hotelno INT PRIMARY KEY,
    hotelname VARCHAR(100),
    city VARCHAR(100)
);

-- Create Room Table
CREATE TABLE Room (
    roomno INT PRIMARY KEY,
    hotelno INT,
    type CHAR(1),
    price DECIMAL(10, 2) CHECK (price > 500),
    FOREIGN KEY (hotelno) REFERENCES Hotel(hotelno)
);

-- Create Guest Table
CREATE TABLE Guest (
    guestno INT PRIMARY KEY,
    guestname VARCHAR(100),
    guestaddress VARCHAR(255)
);

-- Create Booking Table
CREATE TABLE Booking (
    hotelno INT,
    guestno INT,
    datefrom DATE,
    dateto DATE,
    roomno INT,
    FOREIGN KEY (hotelno) REFERENCES Hotel(hotelno),
    FOREIGN KEY (guestno) REFERENCES Guest(guestno),
    FOREIGN KEY (roomno) REFERENCES Room(roomno)
);
Sample Data Insertion
sql
Copy code
-- Insert data into Hotel table
INSERT INTO Hotel (hotelno, hotelname, city)
VALUES (1, 'OPAL', 'London'),
       (2, 'Season4', 'New York'),
       (3, 'Grand Plaza', 'London'),
       (4, 'Luxury Stay', 'Paris'),
       (5, 'Comfort Inn', 'London');

-- Insert data into Room table
INSERT INTO Room (roomno, hotelno, type, price)
VALUES (101, 1, 'D', 1500),
       (102, 1, 'F', 1200),
       (201, 2, 'S', 600),
       (202, 2, 'D', 5000),
       (301, 3, 'F', 800),
       (302, 3, 'D', 900);

-- Insert data into Guest table
INSERT INTO Guest (guestno, guestname, guestaddress)
VALUES (1, 'John Doe', '123 London Rd'),
       (2, 'Jane Smith', '456 Broadway St, London'),
       (3, 'Emily Davis', '789 Park Ave, New York'),
       (4, 'Michael Brown', '101 London St'),
       (5, 'Sarah Wilson', '202 Elm St, Paris');

-- Insert data into Booking table
INSERT INTO Booking (hotelno, guestno, datefrom, dateto, roomno)
VALUES (1, 1, '2024-10-01', '2024-10-05', 101),
       (2, 3, '2024-10-02', '2024-10-06', 201),
       (3, 2, '2024-10-01', '2024-10-03', 301),
       (1, 4, '2024-10-05', '2024-10-10', 102),
       (3, 5, '2024-10-03', '2024-10-07', 302);
Queries
Select all hotels in the city "London".

sql
Copy code
SELECT *
FROM Hotel
WHERE city = 'London';
Display the details of the guest who booked a room in hotel "OPAL".

sql
Copy code
SELECT g.*
FROM Guest g
JOIN Booking b ON g.guestno = b.guestno
JOIN Hotel h ON b.hotelno = h.hotelno
WHERE h.hotelname = 'OPAL';
Display room details whose type is either 'D' or 'F' by price order.

sql
Copy code
SELECT *
FROM Room
WHERE type IN ('D', 'F')
ORDER BY price;
Find average prices of rooms at each hotel.

sql
Copy code
SELECT h.hotelname, AVG(r.price) AS average_price
FROM Hotel h
JOIN Room r ON h.hotelno = r.hotelno
GROUP BY h.hotelname;
Display the guest details whose address includes the substring "London".

sql
Copy code
SELECT *
FROM Guest
WHERE guestaddress LIKE '%London%';
Find the guest name who booked the hotel whose number is the same as the hotel "Season4".

sql
Copy code
SELECT g.guestname
FROM Guest g
JOIN Booking b ON g.guestno = b.guestno
JOIN Hotel h ON b.hotelno = h.hotelno
WHERE h.hotelno = (SELECT hotelno FROM Hotel WHERE hotelname = 'Season4');
Set the value to room price to 5000 whose type is 'D'.

sql
Copy code
UPDATE Room
SET price = 5000
WHERE type = 'D';
Find the average price of each hotel and find those hotels having an average price of more than 2000.

sql
Copy code
SELECT h.hotelname, AVG(r.price) AS average_price
FROM Hotel h
JOIN Room r ON h.hotelno = r.hotelno
GROUP BY h.hotelname
HAVING AVG(r.price) > 2000;
Create a view for rooms with guest details.

sql
Copy code
CREATE VIEW RoomGuestView AS
SELECT r.roomno, r.hotelno, g.guestname, g.guestaddress
FROM Room r
JOIN Booking b ON r.roomno = b.roomno
JOIN Guest g ON b.guestno = g.guestno;
Create a stored procedure to reduce the price of a room (i.e. user-specified) for a specific type (i.e. user-specified).

sql
Copy code
CREATE PROCEDURE ReduceRoomPrice(IN room_type CHAR(1), IN reduction_amount DECIMAL(10, 2))
BEGIN
    UPDATE Room
    SET price = price - reduction_amount
    WHERE type = room_type AND price - reduction_amount > 0; -- Ensure price remains positive
END;