//exp 5
Table Creation
sql
Copy code
-- Create Employee4 table with salary constraint
CREATE TABLE Employee4 (
    eid INT PRIMARY KEY,
    ename VARCHAR(50),
    address VARCHAR(100),
    salary DECIMAL(10, 2) CHECK (salary > 500)
);

-- Create Department4 table
CREATE TABLE Department4 (
    deptid INT PRIMARY KEY,
    dname VARCHAR(50),
    no_of_emp INT,
    location VARCHAR(100)
);

-- Create Worksfor4 table
CREATE TABLE Worksfor4 (
    eid INT,
    deptid INT,
    experience INT,
    FOREIGN KEY (eid) REFERENCES Employee4(eid),
    FOREIGN KEY (deptid) REFERENCES Department4(deptid)
);

-- Create Project4 table
CREATE TABLE Project4 (
    pname VARCHAR(50) PRIMARY KEY,
    technology VARCHAR(50),
    duration INT
);

-- Create Emp_proj4 table
CREATE TABLE Emp_proj4 (
    eid INT,
    role VARCHAR(50),
    pname VARCHAR(50),
    FOREIGN KEY (eid) REFERENCES Employee4(eid),
    FOREIGN KEY (pname) REFERENCES Project4(pname)
);
Sample Data Insertion
sql
Copy code
-- Inserting sample data into Employee4
INSERT INTO Employee4 (eid, ename, address, salary) VALUES
(1, 'John', 'New York', 600),
(2, 'Alice', 'Boston', 700),
(3, 'Bob', 'Chicago', 800);

-- Inserting sample data into Department4
INSERT INTO Department4 (deptid, dname, no_of_emp, location) VALUES
(1, 'HR', 20, 'New York'),
(2, 'IT', 15, 'Boston'),
(3, 'Finance', 12, 'Chicago');

-- Inserting sample data into Worksfor4
INSERT INTO Worksfor4 (eid, deptid, experience) VALUES
(1, 1, 5),
(2, 2, 3),
(3, 3, 2);

-- Inserting sample data into Project4
INSERT INTO Project4 (pname, technology, duration) VALUES
('Management', 'Java', 12),
('Marketing', 'Python', 8),
('Maintenance', 'C++', 10);

-- Inserting sample data into Emp_proj4
INSERT INTO Emp_proj4 (eid, role, pname) VALUES
(1, 'Manager', 'Management'),
(2, 'Developer', 'Marketing'),
(3, 'Tester', 'Maintenance');
Queries
Display name of employee assigned for project with role as "Manager".

sql
Copy code
SELECT e.ename 
FROM Employee4 e
JOIN Emp_proj4 ep ON e.eid = ep.eid
WHERE ep.role = 'Manager';
Display names of project with descending order of duration.

sql
Copy code
SELECT pname 
FROM Project4 
ORDER BY duration DESC;
Display average salary of employee on each department.

sql
Copy code
SELECT d.dname, AVG(e.salary) AS avg_salary
FROM Employee4 e
JOIN Worksfor4 w ON e.eid = w.eid
JOIN Department4 d ON w.deptid = d.deptid
GROUP BY d.dname;
Display names of employee whose project name starts with 'm' and has at least 3 characters.

sql
Copy code
SELECT e.ename 
FROM Employee4 e
JOIN Emp_proj4 ep ON e.eid = ep.eid
WHERE ep.pname LIKE 'm%' AND LENGTH(ep.pname) >= 3;
Find all employees who work for both department and project.

sql
Copy code
SELECT e.ename 
FROM Employee4 e
JOIN Worksfor4 w ON e.eid = w.eid
JOIN Emp_proj4 ep ON e.eid = ep.eid;
Display names of department whose number of employees is between 10 and 30.

sql
Copy code
SELECT dname 
FROM Department4 
WHERE no_of_emp BETWEEN 10 AND 30;
Find the employee details whose salary is the same as the average salary of all employees.

sql
Copy code
SELECT * 
FROM Employee4 
WHERE salary = (SELECT AVG(salary) FROM Employee4);
Change the column name 'no_of_emp' to 'employeecount' of Department4.

sql
Copy code
ALTER TABLE Department4 RENAME COLUMN no_of_emp TO employeecount;
Create a view of all employees in each department.

sql
Copy code
CREATE VIEW EmployeeDepartmentView AS
SELECT e.eid, e.ename, d.dname 
FROM Employee4 e
JOIN Worksfor4 w ON e.eid = w.eid
JOIN Department4 d ON w.deptid = d.deptid;
Create stored procedure to display employee details for a specific employee.

sql
Copy code
CREATE PROCEDURE GetEmployeeDetails (IN emp_id INT)
BEGIN
   SELECT * FROM Employee4 WHERE eid = emp_id;
END;