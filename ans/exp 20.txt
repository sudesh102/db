//exp 20

Table Creation
sql
Copy code
-- Create Book Table
CREATE TABLE Book (
    bookid VARCHAR(10) PRIMARY KEY,
    title VARCHAR(100),
    price DECIMAL(10, 2) CHECK (price > 250),
    pages INT
);

-- Create Author Table
CREATE TABLE Author (
    aid VARCHAR(10) PRIMARY KEY,
    au_name VARCHAR(100),
    address VARCHAR(100),
    city VARCHAR(50)
);

-- Create Writtenby Table
CREATE TABLE Writtenby (
    bookid VARCHAR(10),
    aid VARCHAR(10),
    PRIMARY KEY (bookid, aid),
    FOREIGN KEY (bookid) REFERENCES Book(bookid),
    FOREIGN KEY (aid) REFERENCES Author(aid)
);

-- Create Publisher Table
CREATE TABLE Publisher (
    pid VARCHAR(10) PRIMARY KEY,
    pb_name VARCHAR(100),
    address VARCHAR(100),
    phone VARCHAR(15)
);

-- Create Publishedby Table
CREATE TABLE Publishedby (
    bookid VARCHAR(10),
    pid VARCHAR(10),
    no_of_copies INT,
    year INT,
    PRIMARY KEY (bookid, pid),
    FOREIGN KEY (bookid) REFERENCES Book(bookid),
    FOREIGN KEY (pid) REFERENCES Publisher(pid)
);

-- Create Supplier Table
CREATE TABLE Supplier (
    sup_id VARCHAR(10) PRIMARY KEY,
    sup_name VARCHAR(100),
    address VARCHAR(100),
    city VARCHAR(50)
);

-- Create Supplies Table
CREATE TABLE Supplies (
    bookid VARCHAR(10),
    sup_id VARCHAR(10),
    sup_price DECIMAL(10, 2),
    PRIMARY KEY (bookid, sup_id),
    FOREIGN KEY (bookid) REFERENCES Book(bookid),
    FOREIGN KEY (sup_id) REFERENCES Supplier(sup_id)
);
Sample Data Insertion
sql
Copy code
-- Insert data into Book table
INSERT INTO Book (bookid, title, price, pages)
VALUES ('B001', 'NEWOS', 300, 500),
       ('B002', 'Data Structures', 400, 600),
       ('B003', 'Algorithms', 500, 700),
       ('B004', 'Database Systems', 450, 800),
       ('B005', 'Web Development', 350, 550);

-- Insert data into Author table
INSERT INTO Author (aid, au_name, address, city)
VALUES ('A001', 'John Smith', '123 Elm St', 'Sangli'),
       ('A002', 'Alice Johnson', '456 Oak St', 'Mumbai'),
       ('A003', 'Bob Brown', '789 Pine St', 'Delhi'),
       ('A004', 'Charlie Black', '101 Maple St', 'Chennai');

-- Insert data into Writtenby table
INSERT INTO Writtenby (bookid, aid)
VALUES ('B001', 'A001'),
       ('B002', 'A002'),
       ('B003', 'A003'),
       ('B004', 'A001'),
       ('B005', 'A004');

-- Insert data into Publisher table
INSERT INTO Publisher (pid, pb_name, address, phone)
VALUES ('P001', 'XYZ', '12 Book St', '1234567890'),
       ('P002', 'ABC', '34 Novel Ave', '0987654321'),
       ('P003', 'LMN', '56 Story Blvd', '1122334455');

-- Insert data into Publishedby table
INSERT INTO Publishedby (bookid, pid, no_of_copies, year)
VALUES ('B001', 'P001', 15, 2008),
       ('B002', 'P001', 10, 2009),
       ('B003', 'P002', 20, 2011),
       ('B004', 'P001', 25, 2008),
       ('B005', 'P003', 5, 2012);

-- Insert data into Supplier table
INSERT INTO Supplier (sup_id, sup_name, address, city)
VALUES ('S001', 'Supplier One', '123 Supplier Rd', 'Sangli'),
       ('S002', 'Supplier Two', '456 Supplier Rd', 'Mumbai'),
       ('S003', 'Supplier Three', '789 Supplier Rd', 'Delhi');

-- Insert data into Supplies table
INSERT INTO Supplies (bookid, sup_id, sup_price)
VALUES ('B001', 'S001', 290),
       ('B002', 'S001', 370),
       ('B003', 'S002', 480),
       ('B004', 'S003', 430),
       ('B005', 'S002', 320);
Queries
Display author names whose books are published in the year 2008.

sql
Copy code
SELECT DISTINCT a.au_name
FROM Author a
JOIN Writtenby w ON a.aid = w.aid
JOIN Publishedby p ON w.bookid = p.bookid
WHERE p.year = 2008;
Set title of book "NEWOS" that is identified by 'B001'.

sql
Copy code
UPDATE Book
SET title = 'NEWOS'
WHERE bookid = 'B001';
Display in ascending order the names of books published by "XYZ".

sql
Copy code
SELECT b.title
FROM Book b
JOIN Publishedby pb ON b.bookid = pb.bookid
JOIN Publisher p ON pb.pid = p.pid
WHERE p.pb_name = 'XYZ'
ORDER BY b.title ASC;
Display the names of publishers whose address starts with 'I' and has at least 5 characters.

sql
Copy code
SELECT pb_name
FROM Publisher
WHERE address LIKE 'I%' AND LENGTH(address) >= 5;
Display the name of the supplier who lives in "Sangli".

sql
Copy code
SELECT sup_name
FROM Supplier
WHERE city = 'Sangli';
Display the average price for each book.

sql
Copy code
SELECT b.title, AVG(s.sup_price) AS average_price
FROM Book b
JOIN Supplies s ON b.bookid = s.bookid
GROUP BY b.title;
Display book names whose number of copies is greater than copies of the book published in the year 2011.

sql
Copy code
SELECT b.title
FROM Book b
JOIN Publishedby p ON b.bookid = p.bookid
WHERE p.no_of_copies > (SELECT no_of_copies FROM Publishedby WHERE year = 2011);
Count the number of book copies published at each year and display those years that have at least 10 copies.

sql
Copy code
SELECT year, SUM(no_of_copies) AS total_copies
FROM Publishedby
GROUP BY year
HAVING SUM(no_of_copies) >= 10;
Create a view of books along with author details.

sql
Copy code
CREATE VIEW BookAuthorDetails AS
SELECT b.title, a.au_name, b.price
FROM Book b
JOIN Writtenby w ON b.bookid = w.bookid
JOIN Author a ON w.aid = a.aid;
Create a stored procedure to reduce the price of a book (user-specified) for a specific book (user-specified).

sql
Copy code
CREATE PROCEDURE ReduceBookPrice(IN book_id VARCHAR(10), IN reduction_amount DECIMAL(10, 2))
BEGIN
    UPDATE Book
    SET price = price - reduction_amount
    WHERE bookid = book_id;
END;